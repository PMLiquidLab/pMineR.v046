% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EfirstOrderMarkovModel.R
\name{EfirstOrderMarkovModel}
\alias{EfirstOrderMarkovModel}
\title{A class to train First Order Markov Models}
\usage{
EfirstOrderMarkovModel(parameters.list = list())
}
\arguments{
\item{parameters.list}{a list containing the parameters. The possible ones are: 'considerAutoLoop' and 'threshold'. 'considerAutoLoop' is a boolean which indicates if the autoloops have to be admitted, while 'threshold' is the minimum value that a probability should have to do not be set to zero, in the transition matrix.}
}
\description{
This is an implementation of the First Order Markov Model (EfirstOrderMarkovModel) for Process Mining issues.
               This class provides a minimal set of methods to handle with the FOMM model:
               \itemize{
               \item \code{EfirstOrderMarkovModel( ) } is the costructor
               \item \code{loadDataset( ) } loads data taken from a dataLoader::getData() method, into a FOMM object
               \item \code{trainModel( ) } train a model using the previously loaded dataset
               \item \code{replay( ) } re-play a given event log on the internal FOMM model
               \item \code{play( ) } play the internal FOMM model a desired number of times, in order to simulate new event-logs. This methods can also, if desired, simulate event-logs which does not complies with the internal FOMM model.
               \item \code{plot( ) } plot the internal model
               \item \code{getModel( ) } return the trained internal FOMM model
               \item \code{getInstanceClass( ) } return the instance class Name and description (version, etc.)
               \item \code{findReacheableNodes( ) } and return the array containing the reacheable states, starting from the passed one.
               }
             In order to better undestand the use of such methods, please visit: www.pminer.info
             
             The consturctor admit the following parameters:
parameters.list a list containing possible parameters to tune the model.
}
